<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Extensions.Logging.EventLog</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions">
            <summary>
            Extension methods for the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)">
            <summary>
            Adds an event logger. Use <paramref name="settings"/> to enable logging for specific log levels.
            </summary>
            <param name="factory">The extension method argument.</param>
            <param name="settings">The <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings"/>.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Adds an event logger that is enabled for <see cref="T:Microsoft.Extensions.Logging.LogLevel"/>s of minLevel or higher.
            </summary>
            <param name="factory">The extension method argument.</param>
            <param name="minLevel">The minimum <see cref="T:Microsoft.Extensions.Logging.LogLevel"/> to be logged.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Adds an event logger that is enabled for <see cref="T:Microsoft.Extensions.Logging.LogLevel"/>.Information or higher.
            </summary>
            <param name="factory">The extension method argument.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            Adds an event logger named 'EventLog' to the factory.
            </summary>
            <param name="builder">The extension method argument.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> so that additional calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggingBuilder,Microsoft.Extensions.Logging.EventLog.EventLogSettings)">
            <summary>
            Adds an event logger. Use <paramref name="settings"/> to enable logging for specific log levels.
            </summary>
            <param name="builder">The extension method argument.</param>
            <param name="settings">The <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> so that additional calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.EventLog.EventLogSettings})">
            <summary>
            Adds an event logger. Use <paramref name="configure"/> to enable logging for specific log levels.
            </summary>
            <param name="builder">The extension method argument.</param>
            <param name="configure">A delegate to configure the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> so that additional calls can be chained.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger">
            <summary>
            A logger that writes messages to Windows Event Log.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.#ctor(System.String,Microsoft.Extensions.Logging.EventLog.EventLogSettings,Microsoft.Extensions.Logging.IExternalScopeProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger"/> class.
            </summary>
            <param name="name">The name of the logger.</param>
            <param name="settings">The <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings"/>.</param>
            <param name="externalScopeProvider">The <see cref="T:Microsoft.Extensions.Logging.IExternalScopeProvider"/>.</param>
        </member>
        <member name="P:Microsoft.Extensions.Logging.EventLog.EventLogLogger.EventLog">
            <summary>
            The event log.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.BeginScope``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider">
            <summary>
            The provider for the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor(Microsoft.Extensions.Logging.EventLog.EventLogSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider"/> class.
            </summary>
            <param name="settings">The <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings"/>.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Logging.EventLog.EventLogSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider"/> class.
            </summary>
            <param name="options">The <see cref="T:Microsoft.Extensions.Options.IOptions`1"/>.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.SetScopeProvider(Microsoft.Extensions.Logging.IExternalScopeProvider)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings">
            <summary>
            Settings for <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.LogName">
            <summary>
            Gets or sets the name of the event log. If <see langword="null" /> or not specified, "Application" is the default.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.SourceName">
            <summary>
            Gets or sets the name of the event log source. If <see langword="null" /> or not specified, ".NET Runtime" is the default.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.MachineName">
            <summary>
            Gets or sets the name of the machine with the event log. If <see langword="null" /> or not specified, local machine is the default.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.Filter">
            <summary>
            Gets or sets the function used to filter events based on the log level.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.EventLog.WindowsEventLog">
            <summary>
            The windows event log.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.WindowsEventLog"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.DiagnosticsEventLog">
            <summary>
            The diagnostics event log.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.MaxMessageSize">
            <summary>
            The maximum message size.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.NullExternalScopeProvider">
            <summary>
            Scope provider that does nothing.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.NullExternalScopeProvider.Instance">
            <summary>
            Returns a cached instance of <see cref="T:Microsoft.Extensions.Logging.NullExternalScopeProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.NullExternalScopeProvider.Microsoft#Extensions#Logging#IExternalScopeProvider#ForEachScope``1(System.Action{System.Object,``0},``0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Logging.NullExternalScopeProvider.Microsoft#Extensions#Logging#IExternalScopeProvider#Push(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.Logging.NullScope">
            <summary>
            An empty scope without any logic
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.NullScope.Dispose">
            <inheritdoc />
        </member>
        <member name="M:System.ThrowHelper.ThrowIfNull(System.Object,System.String)">
            <summary>Throws an <see cref="T:System.ArgumentNullException"/> if <paramref name="argument"/> is null.</summary>
            <param name="argument">The reference type argument to validate as non-null.</param>
            <param name="paramName">The name of the parameter with which <paramref name="argument"/> corresponds.</param>
        </member>
        <member name="M:System.ThrowHelper.IfNullOrWhitespace(System.String,System.String)">
            <summary>
            Throws either an <see cref="T:System.ArgumentNullException"/> or an <see cref="T:System.ArgumentException"/>
            if the specified string is <see langword="null"/> or whitespace respectively.
            </summary>
            <param name="argument">String to be checked for <see langword="null"/> or whitespace.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
    </members>
</doc>
